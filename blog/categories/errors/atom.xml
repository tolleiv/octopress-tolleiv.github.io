<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: errors | the fancy part of the web]]></title>
  <link href="http://tolleiv.github.io/blog/categories/errors/atom.xml" rel="self"/>
  <link href="http://tolleiv.github.io/"/>
  <updated>2014-05-04T08:57:44+02:00</updated>
  <id>http://tolleiv.github.io/</id>
  <author>
    <name><![CDATA[Tolleiv Nietsch]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Inherit abstract functions....]]></title>
    <link href="http://tolleiv.github.io/2008/06/inherit-abstract-functions/"/>
    <updated>2008-06-11T22:28:00+02:00</updated>
    <id>http://tolleiv.github.io/2008/06/inherit-abstract-functions</id>
    <content type="html"><![CDATA[<p>A error I find from time to time when I work with inheritance is this one:</p>

<p>Fatal error: Can&rsquo;t inherit abstract function Cookie::setFlavor() (previously declared abstract in ChocolateCookie) in &hellip;</p>

<p>This happens when you try to define multiple abstract classes or interfaces with the same abstract functions &ndash; it&rsquo;s right that this errors shows up, but today I stuck on this error for a while because I did not see the reason for that &ndash; so that&rsquo;s a reminder for me ;)</p>

<p>And the tasty example to reproduce this error:</p>

<p>abstract class Cookie {<br/>
abstract public function setFlavor($flavor);<br/>
}</p>

<p>abstract class ChocolateCookie extends Cookie {<br/>
abstract public function setFlavor($flavor);<br/>
}</p>

<p>There are also some rejected bugreports about that :P <a href="http://bugs.php.net/bug.php?id=35057">#35057</a> <a href="http://bugs.php.net/bug.php?id=35832">#35832</a> <a href="http://bugs.php.net/bug.php?id=41145">#41145</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[error_reposting and exceptions....]]></title>
    <link href="http://tolleiv.github.io/2008/05/error_reposting-and-exceptions/"/>
    <updated>2008-05-20T23:40:00+02:00</updated>
    <id>http://tolleiv.github.io/2008/05/error_reposting-and-exceptions</id>
    <content type="html"><![CDATA[<p>I just found this line:</p>

<p>set_error_handler(create_function(&lsquo;$x, $y&rsquo;, &lsquo;throw new Exception($y, $x);&rsquo;), E_ALL~E_NOTICE);</p>

<p>in the comments on php.net and did a short test to see whether it works. Normally I used to have a global function which passes all the errors through a logging-chain (FILE/MAIL/DISPLAY) but having exceptions could be more comfortable because you might sometimes want to make decisions locally and not on a global scope and just setting and re-setting the error-handler is not the best idea for this&hellip; I&rsquo;m not sure if I get used to it, because the error-handling function did a good job for the last years &hellip; we&rsquo;ll see :)<br/>
So that&rsquo;s the full example code:</p>

<p>set_error_handler(create_function(&lsquo;$x, $y&rsquo;, &lsquo;throw new Exception($y, $x);&rsquo;), E_ALL);<br/>
try {</p>

<p>$errors = array(</p>

<pre><code>                E_USER_WARNING =&gt; "something might be wrong",  
                E_USER_NOTICE =&gt; "it works but I don't like it",  
                E_USER_ERROR =&gt; "something went completly wrong",  
</code></pre>

<p>);</p>

<p>//    echo $name; //should cause a E_NOTICE</p>

<p>foreach($errors as $code=>$msg) {</p>

<pre><code>try {  
    trigger_error($msg,$code);  
}  
catch (Exception $e) {  
    if(!in_array($e-&gt;getCode(),array(E_USER_WARNING,E_USER_NOTICE))) {  
        throw $e;  
    }  
    else {  
        // not a big deal we can push this into a log-file and continue or work...  
        echo "local exception: (".$e-&gt;getCode(). ") ".$e-&gt;getMessage()."&lt;br/&gt;";  
    }   
}  
</code></pre>

<p>}</p>

<p>}<br/>
catch (Exception $e) {<br/>
echo &ldquo;global exception:&rdquo;.$e->getMessage().&ldquo;<br/>&rdquo;;<br/>
}</p>
]]></content>
  </entry>
  
</feed>
